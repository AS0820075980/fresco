/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import com.facebook.fresco.buildsrc.Deps

apply plugin: 'com.android.library'
apply plugin: 'maven'

dependencies {
    compileOnly Deps.jsr305
    compileOnly Deps.javaxAnnotation
    compileOnly Deps.inferAnnotation

    implementation "androidx.core:core:${versions.androidx.core}"

    implementation project(':animated-drawable')
    implementation project(':drawee')
    implementation project(':drawee-backends:drawee-pipeline')
    implementation project(':fbcore')
    implementation project(':imagepipeline')
    implementation project(':imagepipeline-native')
    implementation project(':memory-types:ashmem')
    implementation project(':memory-types:nativememory')
    implementation project(':memory-types:simple')
    implementation project(':ui-common')
    implementation project(':middleware')
    implementation project(':vito:options')

    testImplementation "junit:junit:${JUNIT_VERSION}"
    testImplementation "org.assertj:assertj-core:${versions.assertjCore}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
    testImplementation("org.robolectric:robolectric:${ROBOLECTRIC_VERSION}") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testImplementation project(':imagepipeline-base-test')
}

android {
    buildToolsVersion FrescoConfig.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }

    lintOptions {
        abortOnError false
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task testJar(type: Jar) {
    from android.sourceSets.test.java.srcDirs
    classifier = 'sources'
}

artifacts.add('archives', sourcesJar)
