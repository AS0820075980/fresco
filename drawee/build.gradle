/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import com.facebook.fresco.buildsrc.Deps

apply plugin: 'com.android.library'
apply plugin: 'maven'

dependencies {
    compileOnly "androidx.annotation:annotation:${versions.androidx.annotation}"
    compileOnly "com.facebook.infer.annotation:infer-annotation:${INFER_ANNOTATION_VERSION}"
    compileOnly Deps.jsr305
    compileOnly "javax.annotation:javax.annotation-api:${ANNOTATION_API_VERSION}"

    implementation project(':fbcore')
    implementation project(':imagepipeline')
    implementation project(':imagepipeline-native')
    implementation project(':memory-types:ashmem')
    implementation project(':memory-types:nativememory')
    implementation project(':memory-types:simple')
    implementation project(':ui-common')

    testImplementation Deps.jsr305
    testImplementation "junit:junit:${JUNIT_VERSION}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"
    testImplementation("org.robolectric:robolectric:${ROBOLECTRIC_VERSION}") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}

apply from: rootProject.file('release.gradle')

android {
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }

    sourceSets {
        test {
            java {
                exclude '**/DebugControllerOverlayDrawableInternalTest.java'
            }
        }
    }

    packagingOptions {
        exclude 'NOTICE'
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError false
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
artifacts.add('archives', sourcesJar)
